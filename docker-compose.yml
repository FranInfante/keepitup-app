version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: keepitup_postgres
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: keepitup
    ports:
      - "5432:5432"
    networks:
      - keepitup-network
    volumes:  # Fix: properly indented under 'postgres' service
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot:
    build:
      context: ./KeepItUpBack
      dockerfile: Dockerfile
    container_name: springboot-container
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - keepitup-network
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
  angular:
    build:
      context: ./KeepItUpFront
      dockerfile: Dockerfile
    container_name: angular-container
    depends_on:
      springboot:
        condition: service_started
    ports:
      - "4200:4200"
    networks:
      - keepitup-network

networks:
  keepitup-network:
    driver: bridge

volumes:  # Define named volumes at the root level
  postgres-data:
